1672625040
waR3U4bTeM%3Ac88e51eb67a0d359bd98d5b4d2728b09-fddc07cb1d90b10bb8e426f83231bfd8
s:179244:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"fddc07cb1d90b10bb8e426f83231bfd8";s:39:" phpDocumentor\Reflection\Php\File name";s:18:"PostController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:35:"Http/Controllers/PostController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:75491:"<?php

namespace App\Http\Controllers;

use App\Http\Misc\Helpers\Config;
use App\Http\Requests\BlogPostRequest;
use App\Http\Requests\PostRequest;
use App\Http\Requests\UpdatePostRequest;
use App\Http\Resources\PostCollection;
use App\Http\Resources\PostResource;
use App\Models\Blog;
use App\Models\Post;
use App\Models\PostMentionBlog;
use App\Models\PostTag;
use App\Models\Submission;
use App\Models\Tag;
use App\Services\BlogService;
use App\Notifications\MentionNotification;
use App\Notifications\ReblogNotification;
use App\Services\PostService;
use Illuminate\Http\Request;

class PostController extends Controller
{

    /**
     * @OA\Put(
     * path="/post/{postId}",
     * summary="Edit a new post",
     * description="A blog can edit post",
     * operationId="editpost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     *  @OA\Parameter(
     *          name="postId",
     *          description="Id of the post to be updated.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     *   @OA\RequestBody(
     *    required=true,
     *    description="Post Request has different types depeneds on post type :
     *     in text type :description or title are required, at least one of them ,keep reading is optinal
     *     in image type : at least one uplaoded image,
     *     in chat type : chat_body is required ,chat_title is optional
     *     in quote type:  quote_text is required, quote_body is optinal
     *     in video type:  video is required , url_videos are optinal
     *     in audio type: audio is required
     *     in link type:  link is required
     *     is general : all fields can be given , to be general at least two different field of types should given" ,
     *    @OA\JsonContent(
     *      @OA\Property(property="post_status", type="string", example="published"),
     *      @OA\Property(property="post_time",type="date_time",example="2021-02-17"),
     *      @OA\Property(property="post_type", type="string", example="general"),
     *      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"))),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object",example={"status":"200","msg":"OK"}),
     *       @OA\Property(property="response",type="object",
     *       @OA\Property(property="post_id", type="integer", example=5),
     *       @OA\Property(property="pinned", type="boolean", example=false),
     *       @OA\Property(property="blog_id", type="integer", example=5),
     *       @OA\Property(property="blog_username", type="string", example=""),
     *       @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *       @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *       @OA\Property(property="blog_title", type="string", example=""),
     *       @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *       @OA\Property(property="question_body", type="string", example="How are you?"),
     *       @OA\Property(property="question_id", type="integer", example=3),
     *       @OA\Property(property="question_flag", type="boolean", example=false),
     *       @OA\Property(property="blog_id_asking", type="integer", example=""),
     *       @OA\Property(property="blog_username_asking", type="string", example=""),
     *       @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *       @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *       @OA\Property(property="blog_title_asking", type="string", example=""),
     *       @OA\Property(property="post_type", type="string", example="general"),
     *       @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *       @OA\Property(property="traced_back_posts", type="array",
     *          @OA\Items(
     *              @OA\Property(property="post_id", type="integer", example=5),
     *              @OA\Property(property="blog_id", type="integer", example=5),
     *              @OA\Property(property="blog_username", type="string", example=""),
     *              @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *              @OA\Property(property="blog_title", type="string", example=""),
     *              @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *              @OA\Property(property="post_type", type="string", example="text"),
     *              @OA\Property(property="post_body", type="string", example="<div><h1>The title</h1> <p>a post of type text.</p></div>"),
     *              @OA\Property(property="question_body", type="string", example="How are you?"),
     *              @OA\Property(property="question_id", type="integer", example=3),
     *              @OA\Property(property="question_flag", type="boolean", example=false),
     *              @OA\Property(property="blog_id_asking", type="integer", example=""),
     *              @OA\Property(property="blog_username_asking", type="string", example=""),
     *              @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *              @OA\Property(property="blog_title_asking", type="string", example=""),))),),),
     *@OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *        )
     *     ),
     *   @OA\Response(
     *    response=500,
     *    description="Internal Server error",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "500", "msg":"Internal Server error"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"post is not found"})
     *        )
     *     )
     * )
     */

    /**
     *
     * @param int $postId
     * @param \App\Http\Requests\UpdatePostRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function update($postId, UpdatePostRequest $request)
    {
        //Validate the format of the post id
        if (preg_match('(^[0-9]+$)', $postId) == false) {
            return $this->generalResponse("", "The post id should be numeric.", "422");
        }
        //Validate the existance of the post id
        $post = Post::where('id', $postId)->first();
        if (empty($post)) {
            return $this->generalResponse("", "This post was not found", "404");
        }

        $this->authorize('update', $post);

        //Extract tags of the unupdated post content.
        $postService = new PostService();
        $oldTags = $postService->extractTags($post->body);

        $post->update([
            'status' => $request->post_status ?? $post->status,
            'published_at' => $request->post_time ?? $post->published_at,
            'body' => $request->post_body ?? $post->body,
            'type' => $request->post_type ?? $post->type,
            'pinned' => $request->pinned ?? $post->pinned
        ]);

        //Extract tags of the new updated post content.
        $newTags = $postService->extractTags($post->body);
        //Extract the mentioned blogs from the new updated post content.
        $newMentionedBlogUsernames = $postService->extractMentionedBlogs($post->body);

        //Iterate through the mentioned blogs array
        $blog = $post->blog()->first();
        foreach ($newMentionedBlogUsernames as $mentionedBlogUsername) {
            $mentionedBlog = Blog::where('username', $mentionedBlogUsername)->first();

            //check if that mention refers to an existing blog
            if (!empty($mentionedBlog)) {
                //create a record recording the relation between this post and the blog being mentioned
                $check = PostMentionBlog::firstOrCreate([
                    'post_id' => $post->id,
                    'blog_id' => $mentionedBlog->id
                ]);

                // notify the new mentioned blogs
                if ($check->wasRecentlyCreated) {
                    $mentionedBlogUser = $mentionedBlog->user()->first();
                    $mentionedBlogUser->notify(new MentionNotification(
                        actorBlog:$blog,
                        recipientBlog:$mentionedBlog,
                        post:$post
                    ));
                }
            }
        }
        //Modify the relation records between the post and updated tags
        foreach ($newTags as $tag) {
            Tag::firstOrCreate([
                'description' => $tag
            ]);
            PostTag::firstOrCreate([
                'tag_description' => $tag,
                'post_id' => $post->id
            ]);
        }
        //Remove the relation records between tags non existing in the new content and the updated post
        $removedTags = $postService->getRemovedTags($oldTags, $newTags);
        $post->tags()->detach($removedTags);
        //Detaching the blogs' who were mentioned in the old post content, but not mentioned in the new post content.
        foreach ($post->mentionedBlogs as $mentionedBlog) {
            if (!in_array($mentionedBlog->username, $newMentionedBlogUsernames)) {
                $post->mentionedBlogs()->detach($mentionedBlog->id);
            }
        }
        return $this->generalResponse(new PostResource($post), "OK");
    }

    /**
     * @OA\Delete(
     * path="/post/{postId}",
     * summary="Delete post",
     * description="A blog delete his/her post",
     * operationId="deletepost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     *  @OA\Parameter(
     *          name="postId",
     *          description="Id of the post to be deleted.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="Successful  response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"post is not found"})
     *        )
     *     )
     * )
     */

    /**
     * Delete a post
     *
     * @param int $postId
     * @return \Illuminate\Http\JsonResponse
     */
    public function delete($postId)
    {
        //Validate the format of the post id
        if (preg_match('(^[0-9]+$)', $postId) == false) {
            return $this->generalResponse("", "The post id should be numeric.", "422");
        }
        //Validate the existence of the post
        $post = Post::where('id', $postId)->first();
        if (empty($post)) {
            return $this->generalResponse("", "This post doesn't exist", "404");
        }

        //Validate the authorization to delete the post
        $this->authorize('delete', $post);

        //Deleting the have tags relation records upon deleting the post
        $post->tags()->detach();
        //Deleting the post mention blog relation records upon deleting the post
        $post->mentionedBlogs()->detach();

        $post->delete();
        return $this->generalResponse("", "ok");
    }

    /**
     * @OA\Get(
     * path="/post/{postId}",
     * summary="Get specific post",
     * description="A blog get post",
     * operationId="getapost",
     * tags={"Posts"},
     *   @OA\Parameter(
     *          name="postId",
     *          description="Id of the post to be retrieved.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *   @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *      @OA\Property(property="response",type="object",
     *      @OA\Property(property="post_status", type="string", example="published"),
     *      @OA\Property(property="post_id", type="integer", example=5),
     *      @OA\Property(property="blog_id", type="integer", example=5),
     *      @OA\Property(property="blog_username", type="string", example="sadness"),
     *      @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *      @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *      @OA\Property(property="blog_title", type="string", example=""),
     *      @OA\Property(property="pinned", type="boolean", example=false),
     *      @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *      @OA\Property(property="question_body", type="string", example="How are you?"),
     *      @OA\Property(property="question_id", type="integer", example=3),
     *      @OA\Property(property="question_flag", type="boolean", example=false),
     *      @OA\Property(property="blog_id_asking", type="integer", example=""),
     *      @OA\Property(property="blog_username_asking", type="string", example=""),
     *      @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *      @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *      @OA\Property(property="blog_title_asking", type="string", example=""),
     *      @OA\Property(property="post_type", type="string", example="general"),
     *      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *      @OA\Property(property="traced_back_posts", type="array",
     *          @OA\Items(
     *              @OA\Property(property="post_id", type="integer", example=4),
     *              @OA\Property(property="blog_id", type="integer", example=7),
     *              @OA\Property(property="blog_username", type="string", example="happiness"),
     *              @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *              @OA\Property(property="blog_title", type="string", example=""),
     *              @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *              @OA\Property(property="post_type", type="string", example="general"),
     *              @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *              @OA\Property(property="question_body", type="string", example="How are you?"),
     *              @OA\Property(property="question_id", type="integer", example=3),
     *              @OA\Property(property="question_flag", type="boolean", example=false),
     *              @OA\Property(property="blog_id_asking", type="integer", example=""),
     *              @OA\Property(property="blog_username_asking", type="string", example=""),
     *              @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *              @OA\Property(property="blog_title_asking", type="string", example=""),))
     *     ),
     * )
     *   ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"post is not found"})
     *        )
     *     )
     * )
     */

    /**
     * Retrieve a specific post
     *
     * @param int $postId
     * @return \Illuminate\Http\JsonResponse
     */
    public function show($postId, Request $request)
    {
        //The regular expression describes a value where from start (^) to end ($) it matches one or more (+) digits [0-9].
        if (preg_match('(^[0-9]+$)', $postId) == false) {
            return $this->generalResponse("", "The post id should be numeric.", "422");
        }

        //Validate the existence of the post to be retrieved
        $post = Post::where('id', $postId)->first();
        if ($post == null) {
            return $this->generalResponse("", "This post was not found", "404");
        }

        return $this->generalResponse(new PostResource($post), "ok");
    }

     /**
     * @OA\Post(
     * path="/post/{blog_id}",
     * summary="create new post",
     * description="A blog can create new post",
     * operationId="createpost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     *    @OA\Parameter(
     *          name="blog_id",
     *          description="Id of the blog that'd create the post.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     *   @OA\RequestBody(
     *    required=true,
     *    description="Post Request has different types depeneds on post type :
     *     in text type:description or title are required, at least one of them ,keep reading is optinal
     *     in image type: at least one uplaoded image,
     *     in chat type: chat_body is required, chat_title is optional
     *     in quote type: quote_text is required, quote_body is optinal
     *     in video type: video is required, url_videos are optinal
     *     in audio type: audio is required
     *     in link type: link is required
     *     is general: all fields can be given, to be general at least two different field of types should given",
     *    @OA\JsonContent(
     *      required={"post_status","post_type","post_body"},
     *      @OA\Property(property="post_status", type="string", example="published"),
     *      @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *      @OA\Property(property="post_type", type="string", example="general"),
     *      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *    ),
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *     @OA\Property(property="meta", type="object", example={ "status":"200","msg":"OK"}),
     *       @OA\Property(property="response", type="object",
     *       @OA\Property(property="post_id", type="integer", example=5),
     *       @OA\Property(property="blog_id", type="integer", example=5),
     *       @OA\Property(property="blog_username", type="string", example=""),
     *       @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *       @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *       @OA\Property(property="blog_title", type="string", example=""),
     *       @OA\Property(property="pinned", type="boolean", example=false),
     *       @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *       @OA\Property(property="post_type", type="string", example="general"),
     *       @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *        ),
     *      ),
     *  ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *     )
     *  ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=500,
     *    description="Internal Server error",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "500", "msg":"Internal Server error"})
     *     )
     *  ),
     * )
     */

    /**
     * Creates a new post
     *
     * @param \App\Http\Requests\PostRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(PostRequest $request)
    {
        $blog = Blog::where('id', $request->blog_id)->first();
        $this->authorize('create', [Post::class, $blog]);

        //creates the post
        $publishedAt = ($request->post_time == null && ($request->post_status == 'published' || $request->post_status == 'private')) ? now() : $request->post_time;
        $post = Post::create([
            'status' => $request->post_status,
            'published_at' => $publishedAt,
            'body' => $request->post_body,
            'type' => $request->post_type,
            'blog_id' => $request->blog_id
        ]);

        $postService = new PostService();
        $tags = $postService->extractTags($post->body);
        $mentionedBlogUsernames = $postService->extractMentionedBlogs($post->body);

        //Iterate through the mentioned blogs array
        foreach ($mentionedBlogUsernames as $mentionedBlogUsername) {
            $mentionedBlog = Blog::where('username', $mentionedBlogUsername)->first();

            //check if that mention refers to an existing blog
            if (!empty($mentionedBlog)) {
                //create a record recording the relation between this post and the blog being mentioned
                PostMentionBlog::firstOrCreate([
                    'post_id' => $post->id,
                    'blog_id' => $mentionedBlog->id
                ]);

                // add the notification for post create mentions
                $mentionedBlogUser = $mentionedBlog->user()->first();
                $mentionedBlogUser->notify(new MentionNotification(
                    actorBlog:$blog,
                    recipientBlog:$mentionedBlog,
                    post:$post
                ));
            }
        }

        //Iterate through the tags array
        foreach ($tags as $tag) {
            //if the tag was never found then create a new one
            Tag::firstOrCreate(
                ['description' => $tag]
            );
            //if the tag was found or wasn't, create a relation recording this post with that tag
            PostTag::firstOrCreate([
                'tag_description' => $tag,
                'post_id' => $post->id
            ]);
        }

        return $this->generalResponse(new PostResource($post), "ok");
    }
    /**
     * @OA\Post(
     * path="/post/approve/{post_id}",
     * summary="Approve a specific submission post.",
     * description="A blog approves a specific post that was submitted to one of the authenticated user's blogs.",
     * operationId="approveSubmissionPost",
     * tags={"Submission Posts"},
     * security={ {"bearer": {} }},
     *   @OA\Parameter(
     *          name="post_id",
     *          description="The id of the post to be approved, that was requested to be submitted to one of the current authenticated users' blogs.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     *   @OA\RequestBody(
     *    required=true,
     *    description="
     *      Can update the submission post content, before approving it.
     *      Can approve the post to be published or private or draft. Thus can update the post status to be one of those three.
     *      Can't update the status of the post to submission.
     *      Can update any attribute of the post by specifying it in the body request as shown in the examples.
     *      Can choose not to update any attribute in the post by not sending anything in the body request and approve it as it is." ,
     *    @OA\JsonContent(
     *      @OA\Property(property="post_status", type="string", example="published"),
     *      @OA\Property(property="post_time",type="date_time",example="2021-02-17"),
     *      @OA\Property(property="post_type", type="string", example="general"),
     *      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"))),
     * @OA\Response(
     *    response=200,
     *    description="Successful credentials response",
     *    @OA\JsonContent(
     *      @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *     ),
     * ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"The Specified Blog id was not found"})
     *        )
     *     )
     * )
     */
    /**
     * A blog approves a specific post that was submitted to one of the authenticated user's blogs.
     *
     * @param integer $postId
     * @param \UpdatePostRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function approveSubmission($postId, UpdatePostRequest $request)
    {
        //check if the post id is numeric
        if (preg_match('(^[0-9]+$)', $postId) == false) {
            return $this->generalResponse("", "The post id should be numeric.", "422");
        }
        //check if this post id is a submission
        $submission = Submission::where('post_id', $postId)->first();
        if (empty($submission)) {
            return $this->generalResponse("", "The id specified is not a submission post.", "422");
        }

        $recieverBlog = Blog::where('id', $submission->reciever_id)->first();
        //check the authorization of the user to accept this submission
        $this->authorize('approveSubmission', [Post::class, $recieverBlog]);

        //delete the submission relation, because it's no longer a submission pending request
        $recieverBlog->submissionPosts()->detach($postId);

        //update the post to record the relation that the current blog recieved the submission has now approved the submission post
        //and is now the approving_blog_id
        $post = Post::where('id', $postId)->first();

        $post->update([
            'approving_blog_id' => $recieverBlog->id,
            'status' => 'published'
        ]);

        $this->update($postId, $request);
        return $this->generalResponse("", "OK", "200");
    }
    /**
     * @OA\Post(
     * path="/reblog/{blog_id}/{parent_post_id}",
     * summary="Creates a new post that is a reblog on another existing post",
     * description="Create a new reblog whose parent post is the direct post it is reblogged from.",
     * operationId="createReblog",
     * tags={"Reblogs"},
     * security={ {"bearer": {} }},
     * @OA\Parameter(
     *      name="blog_id",
     *      description="Id of the authenticated user's blog who is creating the reblog.",
     *      required=true,
     *      in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Parameter(
     *      name="parent_post_id",
     *      description="Post id of the direct post the reblog will be reblogged from",
     *      required=true,
     *      in="path",
     *          @OA\Schema(
     *              type="integer")),
     *   @OA\RequestBody(
     *    required=false,
     *    description= "
     *      Reblog Request can contain different data types and differet statuses, however, all fields are optional.
     *      Default values for reblogs without any content:
     *          post_time: yyyy-mm-dd (i.e current time)
     *          post_status: 'published'
     *          post_type: 'general'
     *          pinned: false
     *          post_body: ''
     *      A blog can make a reblog without adding any contnent in the reblog.
     *      A blog may add in the currently created reblog any attribute specified in the api examples.
     *      A blog can only reblog from a parent post which is either an approved submission or a published post. i.e parent post must be of status published.
     *      A blog can't reblog from a parent post with status draft or submission or priavte." ,
     *    @OA\JsonContent(
     *       @OA\Property(property="pinned", type="boolean", example=false),
     *       @OA\Property(property="post_status", type="string", example="published"),
     *       @OA\Property(property="post_time",type="date_time",example="2021-02-15"),
     *       @OA\Property(property="post_type", type="string", example="general"),
     *       @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *   )),
     *
     * @OA\Response(
     *    response=422,
     *    description="Unprocessable Entity",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "422", "msg":"post_parent_id should be numeric"})
     *     )
     * ),
     * @OA\Response(
     *    response=404,
     *    description="Not Found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"The parent post was not found"})
     *     )
     * ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *     )
     * ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"})
     *        )
     *     ),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *   @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *      @OA\Property(property="response",type="object",
     *      @OA\Property(property="post_status", type="string", example="published"),
     *      @OA\Property(property="post_id", type="integer", example=5),
     *      @OA\Property(property="blog_id", type="integer", example=5),
     *      @OA\Property(property="blog_username", type="string", example="sadness"),
     *      @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *      @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *      @OA\Property(property="blog_title", type="string", example=""),
     *      @OA\Property(property="pinned", type="boolean", example=false),
     *      @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *      @OA\Property(property="question_body", type="string", example="How are you?"),
     *      @OA\Property(property="question_id", type="integer", example=3),
     *      @OA\Property(property="question_flag", type="boolean", example=false),
     *      @OA\Property(property="blog_id_asking", type="integer", example=""),
     *      @OA\Property(property="blog_username_asking", type="string", example=""),
     *      @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *      @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *      @OA\Property(property="blog_title_asking", type="string", example=""),
     *      @OA\Property(property="post_type", type="string", example="general"),
     *      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *      @OA\Property(property="traced_back_posts", type="array",
     *          @OA\Items(
     *              @OA\Property(property="post_id", type="integer", example=4),
     *              @OA\Property(property="blog_id", type="integer", example=8),
     *              @OA\Property(property="blog_username", type="string", example="happiness"),
     *              @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *              @OA\Property(property="blog_title", type="string", example=""),
     *              @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *              @OA\Property(property="post_type", type="string", example="general"),
     *              @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *              @OA\Property(property="question_body", type="string", example="How are you?"),
     *              @OA\Property(property="question_id", type="integer", example=3),
     *              @OA\Property(property="question_flag", type="boolean", example=false),
     *              @OA\Property(property="blog_id_asking", type="integer", example=""),
     *              @OA\Property(property="blog_username_asking", type="string", example=""),
     *              @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *              @OA\Property(property="blog_title_asking", type="string", example=""),))
     *     ),
     * )
     *   ),
     * )
     *
     */

    /**
     * Creates a new post that is a reblog on another existing post
     *
     * @param integer $blogId
     * @param integer $parentPostId
     * @param \UpdatePostRequest $request
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function createReblog($blogId, $parentPostId, UpdatePostRequest $request)
    {
        //Validate the format of parent post id and blog id
        if (preg_match('(^[0-9]+$)', $parentPostId) == false) {
            return $this->generalResponse("", "post_parent_id should be numeric", "422");
        }
        if (preg_match('(^[0-9]+$)', $blogId) == false) {
            return $this->generalResponse("", "blog_id should be numeric", "422");
        }

        //Validate the existence of the parent post
        $parentPost = Post::where('id', $parentPostId)->first();
        if (empty($parentPost)) {
            return $this->generalResponse("", "The parent post was not found", "404");
        }
        //Validate the existence of the blog requesting to create a reblog
        $blog = Blog::where('id', $blogId)->first();
        if (empty($blog)) {
            return $this->generalResponse("", "This blog was not found", "404");
        }

        //Validate User Authority to create a reblog
        //And authority to reblog this parent post
        $this->authorize('createReblog', [Post::class, $blog, $parentPost]);

        //Create initially default values for the reblog post, before being updated, if any, by the reblogger (user)
        $reblog = Post::create([
            'parent_id' => $parentPost->id,
            'status' => "published", //initially set the status to published
            'published_at' => now(),
            'type' => "general",
            'body' => "",
            'blog_id' => $blog->id
        ]);
        //Update the reblog with values specified by user while reblogging, if any.
        //Extract mentions and tags from the reblog body content
        $updateResposne = $this->update($reblog->id, $request);
        $reblog = Post::where('id', $reblog->id)->first();

        // notifcation for reblogs
        $parentPostBlog = $parentPost->blog()->first();
        $notifiedUser = $parentPostBlog->user()->first();
        $notifiedUser->notify(new ReblogNotification($blog, $parentPostBlog, $parentPost, $reblog));

        return $updateResposne;
    }
    /**
     * @OA\Get(
     * path="/post/submission/{blog_id}",
     * summary="Get posts submitted to one of the authenticated user's blogs",
     * description="A blog gets the posts requested from other blogs to be submitted on his/her profile.",
     * operationId="getsubmissionposts",
     * tags={"Submission Posts"},
     * security={ {"bearer": {} }},
     *   @OA\Parameter(
     *          name="blog_id",
     *          description="The id of the blog who will retrieve the submissions requested on his/her profile.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="
     *        If a post refers to a submission, it will have the approving_blog_id with the same id of the blog to retrieve submissions done on him.
     *        If a post refers to a submission, all information blog_id, blog_username, blog_avatar, etc. belongs to the submitter (the blog who have submitted the post) will be, not the blog we're calling this route for.",
     *    @OA\JsonContent(
     *      @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *      @OA\Property(property="response",type="object",
     *      @OA\Property(property="posts",type="array",
     *          @OA\Items(
     *              @OA\Property(property="post_id", type="integer", example=5),
     *              @OA\Property(property="blog_id", type="integer", example=5),
     *              @OA\Property(property="blog_username", type="string", example=""),
     *              @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *              @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *              @OA\Property(property="blog_title", type="string", example=""),
     *              @OA\Property(property="approving_blog_id", type="integer", example=70),
     *              @OA\Property(property="post_status", type="string", example="submission"),
     *              @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *              @OA\Property(property="post_type", type="string", example="general"),
     *              @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *           ),
     *        ),
     *       ),
     *     ),
     * ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"The Specified Blog id was not found"})
     *        )
     *     )
     * )
     */
    /**
     * Get posts submitted to one of the authenticated user's blogs.
     *
     * @param int $blogId The id of the blog who will retrieve the submissions requested on his/her profile.
     * @return \Illuminate\Http\JsonResponse
     */
    public function getSubmissions($blogId)
    {
        //The regular expression describes a value where from start (^) to end ($) it matches one or more (+) digits [0-9].
        if (preg_match('(^[0-9]+$)', $blogId) == false) {
            return $this->generalResponse("", "The blog id should be numeric.", "422");
        }

        $blog = Blog::where('id', $blogId)->first();
        if (empty($blog)) {
            return $this->generalResponse("", "The Specified Blog id was not found", "404");
        }

        $this->authorize('viewSubmissionPosts', [Post::class, $blog]);

        $submissionPosts = $blog->submissionPosts()
            ->orderBy('created_at', 'desc')
            ->paginate(Config::PAGINATION_LIMIT);

        return $this->generalResponse(new PostCollection($submissionPosts), "OK");
    }
    /**
     * @OA\Get(
     * path="/posts/{blogId}/published",
     * summary="Get posts of blog which are published",
     * description="
     *  If the Blog id refers to one of the authenticated user's blogs, Then will retrieve his posts that are published, private, and approved submissions.
     *  If the Blog id doesn't refers to one of the authenticated user's blogs, Then will retrieve that blog's posts that are published, and approved submissions.",
     * operationId="getposts",
     * tags={"Posts"},
     * @OA\Parameter(
     *          name="blogId",
     *          description="Blog_id",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *      @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *      @OA\Property(property="response",type="object",
     *          @OA\Property(property="pagination",type="object",
     *              @OA\Property(property="total",type="int",example=17),
     *              @OA\Property(property="count",type="int",example=7),
     *              @OA\Property(property="per_page",type="int",example=10),
     *              @OA\Property(property="current_page",type="int",example=2),
     *              @OA\Property(property="total_pages",type="int",example=2),
     *              @OA\Property(property="first_page_url",type="boolean",example=false),
     *              @OA\Property(property="next_page_url",type="string",example=null),
     *              @OA\Property(property="prev_page_url",type="string",example="http://127.0.0.1:8000/api/posts/{blog_id}?page=1"),),
     *          @OA\Property(property="posts",type="array",
     *              @OA\Items(
     *                  @OA\Property(property="post_id", type="integer", example=4),
     *                  @OA\Property(property="blog_id", type="integer", example=5),
     *                  @OA\Property(property="blog_username", type="string", example=""),
     *                  @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *                  @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *                  @OA\Property(property="blog_title", type="string", example=""),
     *                  @OA\Property(property="pinned", type="boolean", example=false),
     *                  @OA\Property(property="post_status", type="string", example="published"),
     *                  @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *                  @OA\Property(property="question_body", type="string", example="How are you?"),
     *                  @OA\Property(property="question_id", type="integer", example=3),
     *                  @OA\Property(property="question_flag", type="boolean", example=false),
     *                  @OA\Property(property="blog_id_asking", type="integer", example=""),
     *                  @OA\Property(property="blog_username_asking", type="string", example=""),
     *                  @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *                  @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *                  @OA\Property(property="blog_title_asking", type="string", example=""),
     *                  @OA\Property(property="post_type", type="string", example="general"),
     *                  @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *                  @OA\Property(property="traced_back_posts", type="array",
     *                  @OA\Items(
     *                      @OA\Property(property="post_id", type="integer", example=5),
     *                      @OA\Property(property="blog_id", type="integer", example=5),
     *                      @OA\Property(property="blog_username", type="string", example="lifeisnotfair"),
     *                      @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *                      @OA\Property(property="blog_avatar_shape", type="string", example="circle"),
     *                      @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *                      @OA\Property(property="post_type", type="string", example="general"),
     *                      @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *                      @OA\Property(property="question_body", type="string", example=""),
     *                      @OA\Property(property="question_id", type="integer", example=""),
     *                      @OA\Property(property="question_flag", type="boolean", example=false),
     *                      @OA\Property(property="blog_id_asking", type="integer", example=""),
     *                      @OA\Property(property="blog_username_asking", type="string", example=""),
     *                      @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *                      @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *                      ))
     *          ),
     *        ),
     *      ),
     *     ),
     * )
     *   ,
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"This blog id is not found"})
     *        )
     *     )
     * )
     */

    /**
     * Get all published posts of a specific blog.
     *
     * @param int $blogId The id of the blog whose published posts will be retrieved.
     * @return \Illuminate\Http\JsonResponse
     */
    public function index($blogId)
    {
        //Check the Validity of format of blog id
        if (preg_match('(^[0-9]+$)', $blogId) == false) {
            return $this->generalResponse("", "The blog id should be numeric.", "422");
        }
        //Check the Validity of existence of the blog
        $blog = Blog::where('id', $blogId)->first();
        if (empty($blog)) {
            return $this->generalResponse("", "This blog id is not found", "404");
        }

        //Construct the posts to be retrieved for the specified blog
        $authUser = auth('api')->user();
        $postService = new PostService();
        $allPosts = $postService->getProfilePosts($blog);

        return $this->generalResponse(new PostCollection($allPosts), "OK");
    }

     /**
     * @OA\Get(
     * path="/post/{blogId}/draft",
     * summary="Get posts of blog which are drafted",
     * description="A blog get scheduled posts",
     * operationId="getdraftpost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     *    @OA\Parameter(
     *          name="blog_id",
     *          description="Blog_id ",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *      @OA\Property(property="meta",type="object",example={ "status": "200","msg": "OK"}),
     *      @OA\Property(property="response",type="object",
     *          @OA\Property(property="pagination",type="object",
     *              @OA\Property(property="total",type="int",example=17),
     *              @OA\Property(property="count",type="int",example=7),
     *              @OA\Property(property="per_page",type="int",example=10),
     *              @OA\Property(property="current_page",type="int",example=2),
     *              @OA\Property(property="total_pages",type="int",example=2),
     *              @OA\Property(property="first_page_url",type="boolean",example=false),
     *              @OA\Property(property="next_page_url",type="string",example=null),
     *              @OA\Property(property="prev_page_url",type="string",example="http://127.0.0.1:8000/api/posts/{blog_id}?page=1"),),
     *          @OA\Property(property="posts",type="array",
     *              @OA\Items(
     *                  @OA\Property(property="post_id", type="integer", example=5),
     *                  @OA\Property(property="blog_id", type="integer", example=5),
     *                  @OA\Property(property="blog_username", type="string", example=""),
     *                  @OA\Property(property="blog_avatar", type="string", format="byte", example=""),
     *                  @OA\Property(property="blog_avatar_shape", type="string", example=""),
     *                  @OA\Property(property="blog_title", type="string", example=""),
     *                  @OA\Property(property="post_status", type="string", example="draft"),
     *                  @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *                  @OA\Property(property="post_type", type="string", example="general"),
     *                  @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *                  @OA\Property(property="traced_back_posts", type="array",
     *                      @OA\Items(
     *                          @OA\Property(property="post_id", type="integer", example=5),
     *                          @OA\Property(property="blog_id", type="integer", example=5),
     *                          @OA\Property(property="post_time",type="date_time",example="2012-02-30"),
     *                          @OA\Property(property="post_type", type="string", example="general"),
     *                          @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *                          @OA\Property(property="question_body", type="string", example="How are you?"),
     *                          @OA\Property(property="question_id", type="integer", example=3),
     *                          @OA\Property(property="question_flag", type="boolean", example=false),
     *                          @OA\Property(property="blog_id_asking", type="integer", example=""),
     *                          @OA\Property(property="blog_username_asking", type="string", example=""),
     *                          @OA\Property(property="blog_avatar_asking", type="string", format="byte", example=""),
     *                          @OA\Property(property="blog_avatar_shape_asking", type="string", example=""),
     *                          ))
     *          ),
     *       ),
     *      ),
     *     ),
     * ) ,
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"This blog id is not found."})
     *        )
     *     ),
     * @OA\Response(
     *    response=422,
     *    description="Unprocessable Entity",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "422", "msg":"The blog Id should be numeric."})
     *        )
     *     )
     * )
     */

    /**
     * Get Draft Posts.
     * Retrieve all draft posts for any blog of the authenticated user blogs.
     *
     * @param int $blogId
     * @return \Illuminate\Http\JsonResponse
     */
    public function getDraftPosts($blogId)
    {
        //Check Validity of blog id format
        if (preg_match('(^[0-9]+$)', $blogId) == false) {
            return $this->generalResponse("", "The blog Id should be numeric.", "422");
        }
        //Check existence of that blog
        $blog = Blog::where('id', $blogId)->first();
        if (empty($blog)) {
            return $this->generalResponse("", "This blog id is not found.", "404");
        }

        //Check authorization of the currently auth user, to view a specific blog's draft posts.
        $this->authorize('viewDraftPosts', [Post::class, $blog]);

        //Get draft posts
        $postService = new PostService();
        $draftPosts = $postService->getDraftPosts($blogId);
        return $this->generalResponse(new PostCollection($draftPosts), "OK");
    }

    /**
     * @OA\Put(
     * path="/posts/pin",
     * summary="Make a post is pinned in a blog",
     * description="A blog change the post to be pinned",
     * operationId="pinPost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     * @OA\RequestBody(
     *  required=true,
     *  description="
     *      blog_id: is the one of the logged in user blogs
     *      post_id: is the post id the logged in user wants to pin in that blog",
     *  @OA\JsonContent(
     *      @OA\Property(property="blog_id", type="int", example="12"),
     *      @OA\Property(property="post_id", type="int", example="6"),
     * )),
     * @OA\Response(
     *    response=200,
     *    description="Successful  response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"not found"})
     *        )
     *     )
     * )
     */

    /**
     * pin a post in this blog
     *
     * @param App\Http\Requests\BlogPostRequest $request
     * @return json
     **/
    public function pinPost(BlogPostRequest $request)
    {
        $request->validated();
        $isPinned = (new PostService())->pinPostService($request->blog_id, $request->post_id);
        if ($isPinned) {
            return $this->generalResponse("", "ok", "200");
        } else {
            return $this->errorResponse("Unprocessable Entity", 422);
        }
    }

    /**
     * @OA\Put(
     * path="/posts/unpin",
     * summary="Make a post unpinned in a blog",
     * description="A blog change the post to be unpinned",
     * operationId="unpinPost",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     * @OA\RequestBody(
     *  required=true,
     *  description="
     *      blog_id: is the one of the logged in user blogs
     *      post_id: is the post id the logged in user wants to unpin in that blog",
     *  @OA\JsonContent(
     *      @OA\Property(property="blog_id", type="int", example="12"),
     *      @OA\Property(property="post_id", type="int", example="6"),
     * )),
     * @OA\Response(
     *    response=200,
     *    description="Successful  response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"post is not found"})
     *        )
     *     )
     * )
     */

    /**
     * unpin a specific post in this blog
     *
     * @param App\Http\Requests\BlogPostRequest $request
     * @return json
     **/
    public function unpinPost(BlogPostRequest $request)
    {
        $request->validated();
        $isUnpinned = (new PostService())->unpinPostService($request->blog_id, $request->post_id);
        if ($isUnpinned) {
            return $this->generalResponse("", "ok", "200");
        } else {
            return $this->errorResponse("Unprocessable Entity", 422);
        }
    }

     /**
     * @OA\Put(
     * path="/posts/change_status",
     * summary="change status of posts in a blog",
     * description="A blog delete his/her post",
     * operationId="changePostStatus",
     * tags={"Posts"},
     * security={ {"bearer": {} }},
     * @OA\RequestBody(
     *  required=true,
     *  description="
     *      blog_id: is the one of the logged in user blogs
     *      post_id: is the post id the logged in user wants to change its status
     *      post_status: is one of three types published, private or draft",
     *  @OA\JsonContent(
     *      @OA\Property(property="blog_id", type="int", example="12"),
     *      @OA\Property(property="post_id", type="int", example="6"),
     *       @OA\Property(property="post_status", type="string", example="draft")
     * )),
     * @OA\RequestBody(
     *    required=true,
     *    description="Change status of post from private/draft to be pusblished",
     *    @OA\JsonContent(
     *      required={"post_status"},
     *       @OA\Property(property="post_status", type="string", example="published"),
     *     )
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *       )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"post is not found"})
     *        )
     *     )
     * )
     */

    /**
     * change post status to one of three types private, draft or published
     *
     * @param App\Http\Requests\BlogPostRequest $request
     * @return json
     **/
    public function changePostStatus(BlogPostRequest $request)
    {
        if (!$request->filled('post_status')) {
            return $this->errorResponse("the post_status field is required", 422);
        }
        $request->validated();
        $isChanged = (new PostService())->changePostStatusService($request->blog_id, $request->post_id, $request->post_status);
        if ($isChanged) {
            return $this->generalResponse("", "ok", "200");
        } else {
            return $this->errorResponse("Unprocessable Entity", 422);
        }
    }

     /**
     * @OA\Post(
     * path="/post/submission/{blog_id}",
     * summary="Sumbit new post to another blog",
     * description="The authenticated user's primary blog requests to submit a post on another's blog profile",
     * operationId="createSubmissionPost",
     * tags={"Submission Posts"},
     * security={ {"bearer": {} }},
     *  @OA\Parameter(
     *          name="blog_id",
     *          description="The id of the blog who will recieve the submission request.",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     *   @OA\RequestBody(
     *    required=true,
     *    description="post_status must be specified as 'submission'",
     *    @OA\JsonContent(
     *       required={"post_status","post_type","post_body"},
     *       @OA\Property(property="post_status", type="string", example="submission"),
     *       @OA\Property(property="post_time", type="date_time",example="2021-02-15"),
     *       @OA\Property(property="post_type", type="string", example="general"),
     *       @OA\Property(property="post_body", type="string", example="<div> <h1>What's Artificial intellegence? </h1> <img src='https://modo3.com/thumbs/fit630x300/84738/1453981470/%D8%A8%D8%AD%D8%AB_%D8%B9%D9%86_Google.jpg' alt=''> <p>It's the weapon that'd end the humanity!!</p> <video width='320' height='240' controls> <source src='movie.mp4' type='video/mp4'> <source src='movie.ogg' type='video/ogg'> Your browser does not support the video tag. </video> <p>#AI #humanity #freedom</p> </div>"),
     *    ),
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Successful response",
     *    @OA\JsonContent(
     *     @OA\Property(property="meta", type="object", example={ "status":"200","msg":"OK"}),
     *      ),
     *  ),
     *  @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *     )
     *  ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"forbidden"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=500,
     *    description="Internal Server error",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "500", "msg":"Internal Server error"})
     *     )
     *  ),
     * )
     */
    /**
     * The authenticated user's primary blog requests to submit a post on another's blog profile.
     *
     * @param \PostRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function createSubmission(PostRequest $request)
    {
        //check if the post status is submission
        if ($request->post_status != 'submission') {
            return $this->generalResponse("", "post_status should be 'submission'.", "422");
        }

        $blogService = new BlogService();
        $recieverBlog = Blog::where('id', $request->blog_id)->first();
        $submitterBlog = $blogService->getPrimaryBlog(auth()->user());

        //check if the reciever blog allows to have submissions or no
        $this->authorize('createSubmission', [Post::class, $recieverBlog]);

        //create the post
        $post = Post::create([
            'status' => 'submission',
            'published_at' => now(),
            'body' => $request->post_body,
            'type' => $request->post_type,
            'blog_id' => $submitterBlog->id
        ]);

        //create the submission relation
        $submission = Submission::create([
            'submitter_id' => $submitterBlog->id,
            'reciever_id' => $recieverBlog->id,
            'post_id' => $post->id,
        ]);
        //TODO: There should be a niotification sent here

        return $this->generalResponse("", "OK", "200");
    }
    /**
     * @OA\Delete(
     * path="/post/submission/{post_id}",
     * summary="delete submission",
     * description=" A blog deletes a submitted post",
     * operationId="deleteSubmission",
     * tags={"Submission Posts"},
     * security={ {"bearer": {} }},
     *  @OA\Parameter(
     *          name="post_id",
     *          description="post_id of the submitted post to be deleted",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer")),
     * @OA\Response(
     *    response=200,
     *    description="Successful  response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"not found"})
     *        )
     *     ),
     *   @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"})
     *        )
     *     )
     * )
     */

    /**
     * @OA\Delete(
     * path="/posts/submission",
     * summary="delete all submissions",
     * description="Deleting all submission posts that were submitted to any of the authenticated user's blogs",
     * operationId="deleteAllSubmissions",
     * tags={"Submission Posts"},
     * security={ {"bearer": {} }},
     * @OA\Response(
     *    response=200,
     *    description="Successful  response",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
     *        )
     *     ),
     *  @OA\Response(
     *    response=404,
     *    description="Not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"not found"})
     *        )
     *     ),
     *   @OA\Response(
     *    response=401,
     *    description="Unauthorized",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "401", "msg":"Unauthorized"})
     *        )
     *     ),
     *  @OA\Response(
     *    response=403,
     *    description="Forbidden",
     *    @OA\JsonContent(
     *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"})
     *        )
     *     )
     * )
     */
    /**
     * Deleting all submission posts that were submitted to any of the authenticated user's blogs.
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function deleteAllSubmissions()
    {
        //get submissions where revievers are one of the user's blogs.
        $authUser = auth()->user();
        $authBlogs = $authUser->blogs;
        foreach ($authBlogs as $blog) {
            $blog->submissionPosts()->detach();
        }
        return $this->generalResponse("", "ok", "200");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\App\Http\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\App\Http\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:36:"\App\Http\Controllers\PostController";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Http\Controllers\PostController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"PostController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\App\Http\Controllers\Controller";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Controller";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:14:{s:46:"\App\Http\Controllers\PostController::update()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"postId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Http\Requests\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"App\Http\Controllers";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:17:{s:6:"Config";s:28:"App\Http\Misc\Helpers\Config";s:15:"BlogPostRequest";s:33:"App\Http\Requests\BlogPostRequest";s:11:"PostRequest";s:29:"App\Http\Requests\PostRequest";s:17:"UpdatePostRequest";s:35:"App\Http\Requests\UpdatePostRequest";s:14:"PostCollection";s:33:"App\Http\Resources\PostCollection";s:12:"PostResource";s:31:"App\Http\Resources\PostResource";s:4:"Blog";s:15:"App\Models\Blog";s:4:"Post";s:15:"App\Models\Post";s:15:"PostMentionBlog";s:26:"App\Models\PostMentionBlog";s:7:"PostTag";s:18:"App\Models\PostTag";s:10:"Submission";s:21:"App\Models\Submission";s:3:"Tag";s:14:"App\Models\Tag";s:11:"BlogService";s:24:"App\Services\BlogService";s:19:"MentionNotification";s:37:"App\Notifications\MentionNotification";s:18:"ReblogNotification";s:36:"App\Notifications\ReblogNotification";s:11:"PostService";s:24:"App\Services\PostService";s:7:"Request";s:23:"Illuminate\Http\Request";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\App\Http\Controllers\PostController::update()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"update";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"postId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Http\Requests\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:137;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:46:"\App\Http\Controllers\PostController::delete()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"Delete a post";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"postId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\App\Http\Controllers\PostController::delete()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"delete";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"postId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:266;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:44:"\App\Http\Controllers\PostController::show()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"Retrieve a specific post";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"postId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\App\Http\Controllers\PostController::show()";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"show";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"postId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Illuminate\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:367;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:45:"\App\Http\Controllers\PostController::store()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:18:"Creates a new post";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\App\Http\Requests\PostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"PostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\App\Http\Controllers\PostController::store()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"store";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\App\Http\Requests\PostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"PostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:466;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:57:"\App\Http\Controllers\PostController::approveSubmission()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:92:"A blog approves a specific post that was submitted to one of the authenticated user's blogs.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"postId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\App\Http\Controllers\PostController::approveSubmission()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"approveSubmission";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"postId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Http\Requests\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:587;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:52:"\App\Http\Controllers\PostController::createReblog()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:60:"Creates a new post that is a reblog on another existing post";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"blogId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"parentPostId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:52:"\App\Http\Controllers\PostController::createReblog()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"createReblog";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blogId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"parentPostId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Http\Requests\UpdatePostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"UpdatePostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:750;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:54:"\App\Http\Controllers\PostController::getSubmissions()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:61:"Get posts submitted to one of the authenticated user's blogs.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"blogId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:82:"The id of the blog who will retrieve the submissions requested on his/her profile.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\App\Http\Controllers\PostController::getSubmissions()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"getSubmissions";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blogId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:866;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:45:"\App\Http\Controllers\PostController::index()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:43:"Get all published posts of a specific blog.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"blogId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:59:"The id of the blog whose published posts will be retrieved.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\App\Http\Controllers\PostController::index()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"index";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blogId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:992;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:53:"\App\Http\Controllers\PostController::getDraftPosts()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:16:"Get Draft Posts.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:70:"Retrieve all draft posts for any blog of the authenticated user blogs.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"blogId";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\App\Http\Controllers\PostController::getDraftPosts()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"getDraftPosts";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blogId";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1112;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:47:"\App\Http\Controllers\PostController::pinPost()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"pin a post in this blog";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Http\Controllers\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\App\Http\Controllers\json";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"json";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\App\Http\Controllers\PostController::pinPost()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"pinPost";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1187;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:49:"\App\Http\Controllers\PostController::unpinPost()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:34:"unpin a specific post in this blog";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Http\Controllers\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\App\Http\Controllers\json";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"json";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:49:"\App\Http\Controllers\PostController::unpinPost()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"unpinPost";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1252;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\App\Http\Controllers\PostController::changePostStatus()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:68:"change post status to one of three types private, draft or published";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Http\Controllers\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\App\Http\Controllers\json";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"json";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\App\Http\Controllers\PostController::changePostStatus()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"changePostStatus";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\App\Http\Requests\BlogPostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"BlogPostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1327;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\App\Http\Controllers\PostController::createSubmission()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:90:"The authenticated user's primary blog requests to submit a post on another's blog profile.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:12:"\PostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"PostRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\App\Http\Controllers\PostController::createSubmission()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"createSubmission";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\App\Http\Requests\PostRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"PostRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1403;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:60:"\App\Http\Controllers\PostController::deleteAllSubmissions()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:91:"Deleting all submission posts that were submitted to any of the authenticated user's blogs.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\Illuminate\Http\JsonResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"JsonResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:66;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\App\Http\Controllers\PostController::deleteAllSubmissions()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"deleteAllSubmissions";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1525;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:23;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";