1668987810
waR3U4bTeM%3Ac30e959da1abd943fc003037ca51e5d0-e6affeeffb263484befc4b0e2a44ebfd
s:13308:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"e6affeeffb263484befc4b0e2a44ebfd";s:39:" phpDocumentor\Reflection\Php\File name";s:24:"PostActionController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:41:"Http/Controllers/PostActionController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7673:"<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class PostActionController extends Controller
{
 /**
 * @OA\Post(
 * path="/post/reply/{post_id}",
 * summary="add reply on a post",
 * description="send note/reply on a specific post on any blog",
 * operationId="addPostNote",
 * tags={"Post Notes"},
 * security={ {"bearer": {} }},
 *  @OA\Parameter(
 *    in="path",
 *    name="post_id",
 *    description="for the post to reply on",
 *    required=true,
 *    example="666746885177049088",
 *    @OA\Schema(
 *       type="intger",
 *    )
 *  ),
 *  @OA\RequestBody(
 *   description="reply_text: reply text body",
 *   @OA\JsonContent(
 *       @OA\Property(property="reply_text", type="string", example="Good Work"),
 *     ),
 *  ),
 * @OA\Response(
 *    response=200,
 *    description="Successful Reply",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
 *       @OA\Property(property="response", type="object",
 *        @OA\Property(property="blog_object", type="array",
 *          @OA\Items(
 *            @OA\Property(property="blog_avatar", type="string", example="/storage/imgname2.extension"),
 *            @OA\Property(property="blog_avatar_shape", type="string", example="circle"),
 *            @OA\Property(property="blog_username", type="string", example="radwa-ahmed213"),
 *            @OA\Property(property="blog_title", type="string", example="Positive Quotes"),
 *            @OA\Property(property="blog_id", type="integer", example=1032),
 *            @OA\Property(property="followed", type="boolean", example=false),
 *            @OA\Property(property="reply_text", type="string", example="this is my last reply"),
 *            @OA\Property(property="reply_time", type="date-time", example="02-02-2021"),
 *            @OA\Property(property="reply_id", type="integer", example=5),
 *          )
 *       ),
 *    ),
 *  ),
 * ),
 *  @OA\Response(
 *    response=401,
 *    description="Unauthorized",
 *    @OA\JsonContent(
 *     @OA\Property(property="meta", type="object", example={"status": "401", "msg":"unauthorized"}),
 *     ),
 *  ),
 *   @OA\Response(
 *    response=404,
 *    description="Not found",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "404", "msg":"Not found"}))
 * ),
 *   @OA\Response(
 *    response=403,
 *    description="Forbidden",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"}))
 * ),
 * )
 */


 /**
 * @OA\Post(
 * path="/post/like/{post_id}",
 * summary="add like on a post",
 * description="send like on a specific post on any blog via this api route",
 * operationId="addPostLike",
 * tags={"Post Notes"},
 * security={ {"bearer": {} }},
 *  @OA\Parameter(
 *    in="path",
 *    name="post_id",
 *    description="for the post to reply on",
 *    required=true,
 *    example="666746885177049088",
 *    @OA\Schema(
 *       type="int",
 *    )
 *  ),
 * @OA\Response(
 *    response=200,
 *    description="Successful Like",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
 *    ),
 *  ),
 *  @OA\Response(
 *    response=403,
 *    description="Forbidden",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"}))
 * ),
 *  @OA\Response(
 *    response=401,
 *    description="Unauthorized",
 *    @OA\JsonContent(
 *     @OA\Property(property="meta", type="object", example={"status": "401", "msg":"unauthorized"}),
 *     ),
 *  ),
 * )
 */

 /**
 * @OA\Get(
 * path="/post/like/{blog_id}/{post_id}",
 * description="check if specific blog likes specific post",
 * operationId="checkBlogLikesPost",
 * tags={"Post Notes"},
 * security={ {"bearer": {} }},
 * @OA\Parameter(
 *   in="path",
 *   name="blog_id",
 *   description="blog id",
 *   required=true,
 *   example="14253976254",
 *    @OA\Schema(
 *       type="intger",
 *    )
 * ),
 *  @OA\Parameter(
 *    in="path",
 *    name="post_id",
 *    description="post id",
 *    required=true,
 *    example="666746885177049088",
 *    @OA\Schema(
 *       type="integer",
 *    )
 * ),
 * @OA\Response(
 *    response=200,
 *    description="Successful Like",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object",example={"status":"200","msg":"OK"}),
 *       @OA\Property(property="response",type="object",
 *         @OA\Property(property="like_status", type="boolean", example=false),
 *       ),
 *   ),
 *  ),
 *  @OA\Response(
 *    response=403,
 *    description="Forbidden",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"}))
 * ),
 *  @OA\Response(
 *    response=401,
 *    description="Unauthorized",
 *    @OA\JsonContent(
 *     @OA\Property(property="meta", type="object", example={"status": "401", "msg":"unauthorized"}),
 *     ),
 *  ),
 * )
 */

 /**
 * @OA\Delete(
 * path="/post/reply/{reply_id}",
 * summary="delete a specific note/repy from a post",
 * description="each blog can delete any note/repy from their posts, using this api route",
 * operationId="deletePostNote",
 * tags={"Post Notes"},
 * security={ {"bearer": {} }},
 *  @OA\Parameter(
 *    in="path",
 *    name="reply_id",
 *    description="for the reply to be deleted",
 *    required=true,
 *    example="666746885177049088",
 *    @OA\Schema(
 *       type="int",
 *    )
 *  ),
 * @OA\Response(
 *    response=200,
 *    description="Successful Post Reply Deletion",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
 *    ),
 *  ),
 *  @OA\Response(
 *    response=403,
 *    description="Forbidden",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"}))
 * ),
 *  @OA\Response(
 *    response=401,
 *    description="Unauthorized",
 *    @OA\JsonContent(
 *     @OA\Property(property="meta", type="object", example={"status": "401", "msg":"unauthorized"}),
 *     ),
 *  ),
 *  @OA\Response(
 *   response=404,
 *   description="Not Found",
 *   @OA\JsonContent(
 *      @OA\Property(property="meta", type="object", example={"status": "404", "msg":"Not Found"}),
 *   ),
 *  ),
 * )
 */


 /**
 * @OA\Delete(
 * path="/post/like/{post_id}",
 * description="delete a specific like from a post",
 * operationId="deletePostLike",
 * tags={"Post Notes"},
 * security={ {"bearer": {} }},
 *  @OA\Parameter(
 *    in="path",
 *    name="post_id",
 *    description="for the post to delete that like from",
 *    required=true,
 *    example="666746885177049088",
 *    @OA\Schema(
 *       type="integer",
 *    )
 *  ),
 * @OA\Response(
 *    response=200,
 *    description="Successful Like Deletion",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "200", "msg":"ok"}),
 *    ),
 *  ),
 *  @OA\Response(
 *    response=401,
 *    description="Unauthorized",
 *    @OA\JsonContent(
 *     @OA\Property(property="meta", type="object", example={"status": "401", "msg":"unauthorized"}),
 *     ),
 *  ),
 *  @OA\Response(
 *    response=403,
 *    description="Forbidden",
 *    @OA\JsonContent(
 *       @OA\Property(property="meta", type="object", example={"status": "403", "msg":"Forbidden"}))
 * ),
 *  @OA\Response(
 *   response=404,
 *   description="Not Found",
 *   @OA\JsonContent(
 *      @OA\Property(property="meta", type="object", example={"status": "404", "msg":"Not Found"}),
 *   ),
 *  )
 * )
 */
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\App\Http\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\App\Http\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:42:"\App\Http\Controllers\PostActionController";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:42:"\App\Http\Controllers\PostActionController";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"PostActionController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\App\Http\Controllers\Controller";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Controller";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";